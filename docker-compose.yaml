version: '3.8'

services:
  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=payments
      - PGPORT=5432
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pdb:/var/lib/postgresql/data

  migrate:
    image: flyway/flyway:8.5-alpine
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./db/migrations:/flyway/sql
    command: migrate -url="jdbc:postgresql://db:5432/payments?user=postgres&password=postgres&sslmode=disable" -user=postgres -password=postgres

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '29092:29092'
    restart: on-failure
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-vz", "localhost", "29092"]
      interval: 5s
      timeout: 10s
      retries: 5
    environment:
      - KAFKA_CREATE_TOPICS="staging-status:1:1,eventdata-cache-status:1:1"
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - ALLOW_ANONYMOUS_LOGIN=yes

  app:
    build:
      context: .
    container_name: app
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/payments
      - KAFKA_BOOTSTRAP_ADDRESS=kafka:29092
      - MESSAGE_TOPIC_NAME=payments

volumes:
  pdb:
